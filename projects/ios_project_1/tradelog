#!/bin/sh
#Autor: Lebedeva Polina, xlebed12

export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

print_help () 
{
  echo "Usage: tradelog [-h|--help]"
  echo "       tradelog [FILTETR...] [COMMAND] [LOG...]"
  echo "Command list:"
  echo "        list-tick - list of occurring stock symbols.
        profit - statement of total profit from closed positions.
        pos - list of values of currently held positions sorted in descending order by value.
        last-price - list of the last known price for each ticker.
        hist-ord - list of histogram of the number of transactions according to the ticker.
        graph-pos - list of graph of values of held positions according to the ticker."
  echo "Filter agruments:"
  echo "        -a DATETIME - after: only records after this date are considered. DATETIME is in the format YYYY-MM-DD HH: MM: SS.
        -b DATETIME - before: only records BEFORE this date are considered.
        -t TICKER - only records corresponding to the given ticker are considered.
        -w WIDTH - sets the width of the graph listing, ie the length of the longest line to WIDTH." 
}


COMMAND=""
AFTERTIME="0000-01-01 00:00:00"
BEFORETIME="9999-12-31 23:59:59"
LOG=""
GZ_LOG=""
TICKER=""
#promenna for tickers

#zpracovani argumentu
while [ "$#" -gt  0 ];  do #bezi, dokud mame nejake parametry
  case "$1" in
  list-tick | pos |profit | last-price |hist-ord |graph-pos )
    COMMAND="$1"
    shift
    ;;
  -h | --help )
    print_help
    exit 0
    ;;
  -w)
    WIDTH="$2"
    shift
    shift
    ;;
  -a)
    AFTERTIME="$2"
    shift
    shift
    ;;
  -b)
    BEFORETIME="$2" 
    shift
    shift
    ;;
  -t)
    TICKER="$2|$TICKER"
    shift
    shift
    ;;
  *.gz)
    GZ_LOG="$1"
    shift
    ;;
  *)
    LOG="$1"
    shift
    ;;
  esac
done
READ_INPUT=$(gzip -d -c -q $GZ_LOG | cat - $LOG | sort -t ';' -k 2,2) #nacte vstup, a kdyz je to .gz soubor, tak rozzipuje, +abecedne podle TICKERU seradi
TICK_FILTER="egrep -w '^.*\;$TICKER'"

filter_log () {
  eval cat $LOG | sort | awk -v after="$AFTERTIME" -v before="$BEFORETIME" -F ';' '{if ($1 > after && $1 < before ) print $0 }' | eval ${TICK_FILTER}
}

filter_gzlog () {
  gzip -d -c -q $GZ_LOG| cat - |sort | awk -v after="$AFTERTIME" -v before="$BEFORETIME" -F ';' '{if ($1 > after && $1 < before ) print $0 }' | eval ${TICK_FILTER}
}

#Filtrace
  
if [ -z $COMMAND ] && [ -z $TICKER ]; then 
  printf "%s\n" "$READ_INPUT" #dokud nemame zadne komandy, ani tickery, ani dalsi filtry, jen vytiskneme soubor na vstup
  
elif [ -z $GZ_LOG ] && [ -z $COMMAND ]; then 
  #pokud mame nejaky filtr a nemame komandy, tak filtrujeme a vypiseme na vystup
  filter_log
elif [ -n $GZ_LOG ] && [ -z $COMMAND ]; then
  #filtrace pro gzip soubory
  filter_gzlog  
else #nemame zadny soubor, tak ocekavame zaznamy na stdin 
  echo TODO
fi


#podminka pro komandy, pokud odpovida tak vykoname prikaz
case "$COMMAND" in 
  list-tick)
  if [ -z $GZ_LOG ]; then
  awk -F ';' '{print $2}' $LOG| sort | uniq
  else 
  gzip -d -c -q $GZ_LOG| cat - | awk -F ';' '{print $2}'| sort | uniq
  fi
  ;;
  profit)
  if [ -z $GZ_LOG ] && [ -z $TICKER ]; then
  SOUCET_LOG_NT=$(eval cat $LOG| awk -F ';' '{ 
    if ($3=="sell") 
    {soucet_sell+=$4*$6}
    else 
    {soucet_buy+=$4*$6}
    soucet=soucet_sell-soucet_buy
    printf "%.2f\n", soucet
    }' | tail -1)
  echo $SOUCET_LOG_NT
  elif [ -n $GZ_LOG ] && [ -z $TICKER ]; then 
  SOUCET_GZNT=$(gzip -d -c -q $GZ_LOG| cat - | awk -F ';' '{
    if ($3=="sell") 
    {soucet_sell+=$4*$6
    }
    else 
    {soucet_buy+=$4*$6
    }
    soucet=soucet_sell-soucet_buy
    printf "%.2f\n", soucet
    }' | tail -1)
  echo $SOUCET_GZNT
  elif [ -z $GZ_LOG ] && [ -n $TICKER ]; then
  SOUCET=$(filter_log| awk -F ';' '{ 
    if ($3=="sell") 
    {soucet_sell+=$4*$6
    }
    else 
    {soucet_buy+=$4*$6
    }
    soucet=soucet_sell-soucet_buy
    printf "%.2f\n", soucet
    }' | tail -1)
  echo $SOUCET
  else 
  SOUCET_GZ=$(filter_gzlog| awk -F ';' '{
    if ($3=="sell") 
    {soucet_sell+=$4*$6
    }
    else 
    {soucet_buy+=$4*$6
    }
    soucet=soucet_sell-soucet_buy
    printf "%.2f\n", soucet
    }' | tail -1)
  echo $SOUCET_GZ
  fi
  ;;
  pos)
  if [ -z $GZ_LOG ]; then 
  echo TODO
  else 
  echo nic
  fi
  ;;
  last-price)
  echo last-price
  ;;
  hist-ord)
  echo hist
  ;;
  graph-pos)
  echo graph
  ;;
esac
